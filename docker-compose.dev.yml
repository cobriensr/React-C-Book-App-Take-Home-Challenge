# docker-compose.dev.yml

services:
  # SQL Server Database
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: book-library-db-dev
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Password123
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data_dev:/var/opt/mssql
    networks:
      - book-library-network-dev
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "YourStrong@Password123" -Q "SELECT 1" -b -o /dev/null
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  # .NET Backend API with hot reload
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: build  # Use build stage for development
    container_name: book-library-api-dev
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=db;Database=BookLibraryDb;User Id=sa;Password=YourStrong@Password123;TrustServerCertificate=True
      - DOTNET_USE_POLLING_FILE_WATCHER=true
      - DOTNET_WATCH_SUPPRESS_LAUNCH_BROWSER=true
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - book-library-network-dev
    volumes:
      - ./backend:/src
      - ~/.nuget/packages:/root/.nuget/packages:ro
    command: dotnet watch run --no-restore --urls http://+:8080

  # React Frontend with hot reload
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development  # Use development stage
    container_name: book-library-frontend-dev
    environment:
      - VITE_API_URL=http://localhost:8080
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - book-library-network-dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    stdin_open: true
    tty: true

networks:
  book-library-network-dev:
    driver: bridge

volumes:
  sqlserver_data_dev:
    driver: local