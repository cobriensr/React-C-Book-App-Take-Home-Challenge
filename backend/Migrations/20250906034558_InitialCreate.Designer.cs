// <auto-generated />
using System;
using BookApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookApi.Migrations
{
    [DbContext(typeof(BookApiContext))]
    [Migration("20250906034558_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookApi.Models.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("Author");

                    b.HasIndex("Genre");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("PublishedDate");

                    b.HasIndex("Title");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c2487e10-bc4d-4089-b90d-a4e38c02fce9"),
                            Author = "Andy Hunt, Dave Thomas",
                            CreatedAt = new DateTime(2025, 9, 6, 3, 45, 58, 412, DateTimeKind.Utc).AddTicks(2100),
                            Genre = "Software",
                            IsDeleted = false,
                            PublishedDate = new DateTime(1999, 10, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Rating = 5,
                            Title = "The Pragmatic Programmer",
                            UpdatedAt = new DateTime(2025, 9, 6, 3, 45, 58, 412, DateTimeKind.Utc).AddTicks(2220)
                        },
                        new
                        {
                            Id = new Guid("cb1b9915-79aa-4d90-8dc2-ce6ee0bcff2f"),
                            Author = "Robert C. Martin",
                            CreatedAt = new DateTime(2025, 9, 6, 3, 45, 58, 412, DateTimeKind.Utc).AddTicks(2470),
                            Genre = "Software",
                            IsDeleted = false,
                            PublishedDate = new DateTime(1999, 10, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Rating = 5,
                            Title = "Clean Code",
                            UpdatedAt = new DateTime(2025, 9, 6, 3, 45, 58, 412, DateTimeKind.Utc).AddTicks(2470)
                        },
                        new
                        {
                            Id = new Guid("e0fd905b-60b6-41d7-8eb3-7d91f3bf7c3a"),
                            Author = "Gang of Four",
                            CreatedAt = new DateTime(2025, 9, 6, 3, 45, 58, 412, DateTimeKind.Utc).AddTicks(2480),
                            Genre = "Software",
                            IsDeleted = false,
                            PublishedDate = new DateTime(1999, 10, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            Rating = 4,
                            Title = "Design Patterns",
                            UpdatedAt = new DateTime(2025, 9, 6, 3, 45, 58, 412, DateTimeKind.Utc).AddTicks(2480)
                        },
                        new
                        {
                            Id = new Guid("986975ac-4130-41da-b20e-e7a29af2fa52"),
                            Author = "Gene Kim, Kevin Behr, George Spafford",
                            CreatedAt = new DateTime(2025, 9, 6, 3, 45, 58, 412, DateTimeKind.Utc).AddTicks(2490),
                            Genre = "DevOps",
                            IsDeleted = false,
                            PublishedDate = new DateTime(2013, 1, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            Rating = 4,
                            Title = "The Phoenix Project",
                            UpdatedAt = new DateTime(2025, 9, 6, 3, 45, 58, 412, DateTimeKind.Utc).AddTicks(2490)
                        },
                        new
                        {
                            Id = new Guid("bbab1eeb-dd9e-4f52-8f5a-60a594526325"),
                            Author = "James Clear",
                            CreatedAt = new DateTime(2025, 9, 6, 3, 45, 58, 412, DateTimeKind.Utc).AddTicks(2500),
                            Genre = "Self-Help",
                            IsDeleted = false,
                            PublishedDate = new DateTime(2018, 10, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            Rating = 5,
                            Title = "Atomic Habits",
                            UpdatedAt = new DateTime(2025, 9, 6, 3, 45, 58, 412, DateTimeKind.Utc).AddTicks(2500)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
